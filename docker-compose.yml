version: "3"
services:
  traefik:
    build:
      context: .
      dockerfile: Dockerfile.traefik
    image: traefik:1.4-alpine
    command:
    - --configfile=/etc/traefik.toml
    - --debug
    volumes:
    - ./services/traefik/traefik.toml:/etc/traefik.toml
    - ./bin/tls:/certs
    - /var/run/docker.sock:/var/run/docker.sock
    ports:
    - 80:80
    - 443:443
    - 8080:8080

  localAuth:
    build:
      context: .
    image: golang
    depends_on:
    - cloudAuth
    command:
    - /wwm/localAuth
    volumes:
    - ./.bin/:/wwm
    - ./.data/localAuth:/data
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    - ./cmd/localAuth/serviceCertsAndPaths.yml:/serviceCertsAndPaths.yml:ro
    environment:
    - DOMAIN_TYPE=clinic
    - DOMAIN_ID=e4ebb41b-7c62-4db7-9e1c-f47058b96dd0
    - KEY_PATH=/certs/localAuth-key.pem
    - CERT_PATH=/certs/localAuth.pem
    - AUTH_SYNC_KEY_PATH=/certs/localAuthSync-key.pem
    - AUTH_SYNC_CERT_PATH=/certs/localAuthSync.pem
    - STORAGE_ENCRYPTION_KEY=6fgt+cQUwUHbhzEalXkFv3ESMNMti1mdJxP6hFVjZGQ=

  localStorage:
    image: golang:1.9-alpine
    command:
    - /wwm/localStorage
    volumes:
    - ./.bin/:/wwm
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - DOMAIN_TYPE=clinic
    - DOMAIN_ID=e4ebb41b-7c62-4db7-9e1c-f47058b96dd0
    - KEY_PATH=/certs/localStorage-key.pem
    - CERT_PATH=/certs/localStorage.pem
    - S3_SECRET=localminio
    - STORAGE_ENCRYPTION_KEY=6fgt+cQUwUHbhzEalXkFv3ESMNMti1mdJxP6hFVjZGQ=
    - NATS_SECRET=secret

  localMinio:
    image: minio/minio
    command:
    - server
    - /data
    environment:
    - MINIO_ACCESS_KEY=local
    - MINIO_SECRET_KEY=localminio
    ports:
    - 9000:9000
    volumes:
    - ./bin/tls/localMinio-key.pem:/root/.minio/certs/private.key
    - ./bin/tls/localMinio.pem:/root/.minio/certs/public.crt
    - ./.data/localMinio:/data

  cloudStorage:
    image: golang:1.9-alpine
    command:
    - /wwm/cloudStorage
    volumes:
    - ./.bin/:/wwm
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - DOMAIN_TYPE=cloud
    - DOMAIN_ID=*
    - AUTH_HOST=cloudAuth
    - KEY_PATH=/certs/cloudStorage-key.pem
    - CERT_PATH=/certs/cloudStorage.pem
    - S3_SECRET=cloudminio
    - STORAGE_ENCRYPTION_KEY=6fgt+cQUwUHbhzEalXkFv3ESMNMti1mdJxP6hFVjZGQ=

  cloudMinio:
    image: minio/minio
    command:
    - server
    - /data
    environment:
    - MINIO_ACCESS_KEY=cloud
    - MINIO_SECRET_KEY=cloudminio
    volumes:
    - ./bin/tls/cloudMinio-key.pem:/root/.minio/certs/private.key
    - ./bin/tls/cloudMinio.pem:/root/.minio/certs/public.crt
    - ./.data/cloudMinio:/data

  cloudAuth:
    build:
      context: .
    image: golang
    command:
    - /wwm/cloudAuth
    volumes:
    - ./.bin/:/wwm
    - ./.data/cloudAuth:/data
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    - ./cmd/cloudAuth/serviceCertsAndPaths.yml:/serviceCertsAndPaths.yml:ro
    - ./cmd/cloudAuth/rolesAndRules.yml:/rolesAndRules.yml:ro
    - ./cmd/cloudAuth/instanceInitData.yml:/instanceInitData.yml:ro
    environment:
    - DOMAIN_TYPE=cloud
    - DOMAIN_ID=*
    - KEY_PATH=/certs/cloudAuth-key.pem
    - CERT_PATH=/certs/cloudAuth.pem
    - STORAGE_ENCRYPTION_KEY=6fgt+cQUwUHbhzEalXkFv3ESMNMti1mdJxP6hFVjZGQ=
    - STORAGE_INIT_DATA_FILEPATHS=/rolesAndRules.yml,/instanceInitData.yml

  localNats:
    image: nats-streaming
    ports:
    - 4242:4242
    - 8282:8282
    command:
    - --stan_config=/etc/nats/config.conf
    volumes:
    - ./services/localNats/config.conf:/etc/nats/config.conf:ro
    - ./.data/localNats:/data
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro

  storageSync:
    image: golang:1.9-alpine
    command:
    - /wwm/storageSync
    volumes:
    - ./.bin/:/wwm
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - KEY_PATH=/certs/storageSync-key.pem
    - CERT_PATH=/certs/storageSync.pem
    - NATS_SECRET=secret

  localPrometheus:
    image: prom/prometheus
    command:
    - --config.file=/etc/prometheus/config.yml
    - --storage.tsdb.path=/data
    volumes:
    - ./services/localPrometheus/config.yml:/etc/prometheus/config.yml:ro
    - ./services/localPrometheus/rules.yml:/etc/prometheus/rules.yml:ro
    - ./.data/localPrometheus:/data
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro

  cloudPrometheus:
    image: prom/prometheus
    command:
    - --config.file=/etc/prometheus/config.yml
    - --storage.tsdb.path=/data
    volumes:
    - ./services/cloudPrometheus/config.yml:/etc/prometheus/config.yml:ro
    - ./services/cloudPrometheus/rules.yml:/etc/prometheus/rules.yml:ro
    - ./.data/cloudPrometheus:/data
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro

  natsStreamingExporter:
    image: registry.gitlab.com/civist/nats-streaming-exporter
    command:
    - /nats-streaming-exporter
    - -nats-uri=http://localNats:8282/
    ports:
    - 9275:9275

  batchStorageSync:
    image: golang:1.9-alpine
    command:
    - /wwm/batchStorageSync
    volumes:
    - ./.bin/:/wwm
    - ./.data/batchStorageSync:/data/
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - KEY_PATH=/certs/batchStorageSync-key.pem
    - CERT_PATH=/certs/batchStorageSync.pem

  localPrometheusPushGateway:
    image: prom/pushgateway

  waitlist:
    build:
      context: .
    image: golang
    command:
    - /wwm/waitlist
    volumes:
    - ./.bin/:/wwm
    - ./.data/waitlist:/data
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - DOMAIN_TYPE=clinic
    - DOMAIN_ID=e4ebb41b-7c62-4db7-9e1c-f47058b96dd0
    - KEY_PATH=/certs/waitlist-key.pem
    - CERT_PATH=/certs/waitlist.pem
    - STORAGE_ENCRYPTION_KEY=6fgt+cQUwUHbhzEalXkFv3ESMNMti1mdJxP6hFVjZGQ=

  localStatusReporter:
    image: golang:1.9-alpine
    command:
    - /wwm/localStatusReporter
    volumes:
    - ./.bin/:/wwm
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    - ./cmd/localStatusReporter/statusReporterComponents.yml:/components.yml:ro
    environment:
    - DOMAIN_TYPE=clinic
    - DOMAIN_ID=e4ebb41b-7c62-4db7-9e1c-f47058b96dd0
    - KEY_PATH=/certs/localStatusReporter-key.pem
    - CERT_PATH=/certs/localStatusReporter.pem

  cloudStatusReporter:
    image: golang:1.9-alpine
    command:
    - /wwm/cloudStatusReporter
    volumes:
    - ./.bin/:/wwm
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    - ./cmd/cloudStatusReporter/statusReporterComponents.yml:/components.yml:ro
    environment:
    - DOMAIN_TYPE=cloud
    - DOMAIN_ID=*
    - KEY_PATH=/certs/cloudStatusReporter-key.pem
    - CERT_PATH=/certs/cloudStatusReporter.pem

  postgres:
    build:
      context: .
      dockerfile: ./services/postgres/Dockerfile
    volumes:
    - ./services/postgres:/docker-entrypoint-initdb.d
    - ./bin/tls:/certs:ro
    ports:
    - 5432:5432
    environment:
    - POSTGRES_USER=root
    - POSTGRES_PASSWORD=root

  localDiscovery:
    image: golang:1.9-alpine
    command:
    - /wwm/localDiscovery
    volumes:
    - ./.bin/:/wwm
    - ./.data/localDiscovery:/var/data
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - DOMAIN_TYPE=clinic
    - DOMAIN_ID=e4ebb41b-7c62-4db7-9e1c-f47058b96dd0
    - VAULT_TOKEN=LOCAL-DISCOVERY-TOKEN
    - VAULT_DB_ROLE=localDiscoveryService
    - KEY_PATH=/certs/localDiscovery-key.pem
    - CERT_PATH=/certs/localDiscovery.pem
    - DB_USERNAME=localdiscovery
    - DB_PASSWORD=localdiscovery
    # - DEBUG=1

  cloudDiscovery:
    image: golang:1.9-alpine
    command:
    - /wwm/cloudDiscovery
    volumes:
    - ./.bin/:/wwm
    - ./.data/cloudDiscovery:/var/data
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - DOMAIN_TYPE=cloud
    - DOMAIN_ID=*
    - VAULT_TOKEN=CLOUD-DISCOVERY-TOKEN
    - VAULT_DB_ROLE=cloudDiscoveryService
    - KEY_PATH=/certs/cloudDiscovery-key.pem
    - CERT_PATH=/certs/cloudDiscovery.pem
    - AUTH_HOST=cloudAuth
    - DB_USERNAME=clouddiscovery
    - DB_PASSWORD=clouddiscovery
    # - DEBUG=1

  pgweb:
    image: sosedoff/pgweb
    ports:
    - 8081:8081
    command:
    - /usr/bin/pgweb
    - --bind=0.0.0.0
    - --listen=8081
    - --url=postgres://root:root@postgres:5432/localdiscovery?sslmode=require

  localSymmetric:
    build:
      context: services/symmetric
      dockerfile: Dockerfile
    image: symmetric
    command:
    - /root/bin/local.sh
    volumes:
    - ./services/symmetric/engines:/opt/symmetric/engines:ro
    - ./services/symmetric/samples:/opt/symmetric/samples:ro
    - ./services/symmetric/bin:/root/bin:ro
    - ./services/symmetric/log4j.xml:/opt/symmetric/conf/log4j.xml:ro
    depends_on:
    - postgres

  cloudSymmetric:
    build:
      context: services/symmetric
      dockerfile: Dockerfile
    image: symmetric
    command:
    - /root/bin/cloud.sh
    volumes:
    - ./services/symmetric/engines:/opt/symmetric/engines:ro
    - ./services/symmetric/samples:/opt/symmetric/samples:ro
    - ./services/symmetric/bin:/root/bin:ro
    - ./services/symmetric/log4j.xml:/opt/symmetric/conf/log4j.xml:ro
    depends_on:
    - postgres

  waiter:
    image: martin/wait:latest

  batchDataExporter:
    image: golang:1.9-alpine
    command:
    - /wwm/batchDataExporter
    volumes:
    - ./.bin/:/wwm
    - ./.data/dataDataExporter:/data/
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - STORAGE_HOST=cloudStorage
    - AUTH_HOST=cloudAuth
    - KEY_PATH=/certs/batchDataExporter-key.pem
    - CERT_PATH=/certs/batchDataExporter.pem
    - DB_USERNAME=batchdataexporter
    - DB_PASSWORD=batchdataexporter
    - DATA_ENCRYPTION_KEY=6fgt+cQUwUHbhzEalXkFv3ESMNMti1mdJxP6hFVjZGQ=

  reportsStorage:
    image: golang:1.9-alpine
    command:
    - /wwm/reportsStorage
    volumes:
    - ./.bin/:/wwm
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - DOMAIN_TYPE=cloud
    - DOMAIN_ID=*
    - AUTH_HOST=cloudAuth
    - KEY_PATH=/certs/reportsStorage-key.pem
    - CERT_PATH=/certs/reportsStorage.pem
    - S3_SECRET=cloudminio
    - STORAGE_ENCRYPTION_KEY=6fgt+cQUwUHbhzEalXkFv3ESMNMti1mdJxP6hFVjZGQ=

  batchReportGenerator:
    image: golang:1.9-alpine
    command:
    - /wwm/batchReportGenerator
    volumes:
    - ./.bin/:/wwm
    - ./.data/batchReportGenerator:/data/
    - ./bin/tls:/certs:ro
    - ./bin/tls/ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - STORAGE_HOST=cloudStorage
    - STORAGE_PATH=storage
    - AUTH_HOST=cloudAuth
    - KEY_PATH=/certs/batchReportGenerator-key.pem
    - CERT_PATH=/certs/batchReportGenerator.pem
    - DB_USERNAME=reportgenerator
    - DB_PASSWORD=reportgenerator
