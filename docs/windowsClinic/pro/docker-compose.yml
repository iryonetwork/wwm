version: "3.6"
services:
  traefik:
    build:
      context: ..\
      dockerfile: Dockerfile.traefik
    image: traefik:1.4-alpine
    command:
    - --configfile=/etc/traefik.toml
    - --debug
    volumes:
    - C:\iryo\wwm\docs\windowsClinic\traefik.toml:/etc/traefik.toml
    - C:\iryo\wwm\bin\tls:/certs
    - /var/run/docker.sock:/var/run/docker.sock
    ports:
    - 80:80
    - 443:443
    - 8080:8080

  localFrontend:
    image: iryo/localfrontend:${IRYO_TAG}
    volumes:
    - C:\iryo\wwm\docs\windowsClinic\frontendConfig.json:/iryo/config.json:ro

  localAuth:
    image: iryo/localauth:${IRYO_TAG}
    command:
    - ./localAuth
    volumes:
    - C:\iryo\wwm\.data\localAuth:/data
    - C:\iryo\wwm\bin\tls:/certs:ro
    - C:\iryo\wwm\bin/tls\ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    - C:\iryo\wwm\cmd\localAuth\serviceCertsAndPaths.yml:/serviceCertsAndPaths.yml:ro
    environment:
    - DOMAIN_TYPE=clinic
    - DOMAIN_ID=$CLINIC_ID}
    - KEY_PATH=/certs/localAuth-key.pem
    - CERT_PATH=/certs/localAuth.pem
    - AUTH_SYNC_KEY_PATH=/certs/localAuthSync-key.pem
    - AUTH_SYNC_CERT_PATH=/certs/localAuthSync.pem
    - STORAGE_ENCRYPTION_KEY=${AUTH_STORAGE_ENCRYPTION_KEY}
    - CLOUD_AUTH_HOST=${CLOUD_AUTH_HOST}
    - BOLT_DB_FILEPATH=/data/auth.db

  localStorage:
    image: iryo/localstorage:${IRYO_TAG}
    command:
    - ./localStorage
    volumes:
    - C:\iryo\wwm\bin\tls:/certs:ro
    - C:\iryo\wwm\bin\tls\ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - DOMAIN_TYPE=clinic
    - DOMAIN_ID=${CLINIC_ID}
    - KEY_PATH=/certs/localStorage-key.pem
    - CERT_PATH=/certs/localStorage.pem
    - S3_SECRET=localminio
    - STORAGE_ENCRYPTION_KEY=6fgt+cQUwUHbhzEalXkFv3ESMNMti1mdJxP6hFVjZGQ=
    - NATS_SECRET=secret

  localMinio:
    image: minio/minio
    command:
    - server
    - /data
    environment:
    - MINIO_ACCESS_KEY=local
    - MINIO_SECRET_KEY=localminio
    ports:
    - 9000:9000
    volumes:
    - C:\iryo\wwm\bin/tls/localMinio-key.pem:/root/.minio/certs/private.key
    - C:\iryo\wwm\bin/tls/localMinio.pem:/root/.minio/certs/public.crt
    - C:\iryo\wwm\.data\localMinio:/data

  localNats:
    image: nats-streaming
    ports:
    - 4242:4242
    - 8282:8282
    command:
    - --stan_config=/etc/nats/config.conf
    volumes:
    - C:\iryo\wwm\services\localNats\config.conf:/etc/nats/config.conf:ro
    - C:\iryo\wwm\bin\tls:/certs:ro
    - C:\iryo\wwm\bin\tls\ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    - C:\iryo\wwm\.data\localNats:/data

  storageSync:
    image: iryo/storagesync:${IRYO_TAG}
    command:
    - ./storageSync
    volumes:
    - C:\iryo\wwm\bin\tls:/certs:ro
    - C:\iryo\wwm\bin\tls\ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - KEY_PATH=/certs/storageSync-key.pem
    - CERT_PATH=/certs/storageSync.pem
    - NATS_SECRET=secret
    - CLOUD_STORAGE_HOST=${CLOUD_STORAGE_HOST}

  localPrometheus:
    image: prom/prometheus
    command:
    - --config.file=/etc/prometheus/config.yml
    - --storage.tsdb.path=/data
    user: root:root
    volumes:
    - C:\iryo\wwm\services\localPrometheus\config.yml:/etc/prometheus/config.yml:ro
    - C:\iryo\wwm\services\localPrometheus\rules.yml:/etc/prometheus/rules.yml:ro
    - C:\iryo\wwm\bin\tls:/certs:ro
    - C:\iryo\wwm\bin\tls\ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    - C:\iryo\wwm\.data\localPrometheus:/data:rw

  natsStreamingExporter:
    image: registry.gitlab.com/civist/nats-streaming-exporter
    command:
    - /nats-streaming-exporter
    - -nats-uri=http://localNats:8282/
    ports:
    - 9275:9275

  batchStorageSync:
    image: iryo/batchstoragesync:${IRYO_TAG}
    command:
    - ./batchStorageSync
    volumes:
    - C:\iryo\wwm\bin\tls:/certs:ro
    - C:\iryo\wwm\bin\tls\ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    - C:\iryo\wwm\.data\batchStorageSync:/data
    environment:
    - KEY_PATH=/certs/batchStorageSync-key.pem
    - CERT_PATH=/certs/batchStorageSync.pem
    - BOLT_DB_FILEPATH=/batchStorageSync.db
    - CLOUD_STORAGE_HOST=${CLOUD_STORAGE_HOST}

  localPrometheusPushGateway:
    image: prom/pushgateway

  waitlist:
    image: iryo/waitlist:${IRYO_TAG}
    command:
    - ./waitlist
    volumes:
    - C:\iryo\wwm\bin\tls:/certs:ro
    - C:\iryo\wwm\bin\tls\ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    - C:\iryo\wwm\.data\waitlist:/data
    environment:
    - DOMAIN_TYPE=clinic
    - DOMAIN_ID=${CLINIC_ID}
    - KEY_PATH=/certs/waitlist-key.pem
    - CERT_PATH=/certs/waitlist.pem
    - STORAGE_ENCRYPTION_KEY=6fgt+cQUwUHbhzEalXkFv3ESMNMti1mdJxP6hFVjZGQ=
    - BOLT_DB_FILEPATH=/data/waitlist.db

  localStatusReporter:
    image: iryo/localstatusreporter:${IRYO_TAG}
    command:
    - ./localStatusReporter
    volumes:
    - C:\iryo\wwm\bin\tls:/certs:ro
    - C:\iryo\wwm\bin\tls\ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    - C:\iryo\wwm\docs\windowsClinic\statusReporterComponents.yml:/components.yml:ro
    environment:
    - DOMAIN_TYPE=clinic
    - DOMAIN_ID=$CLINIC_ID}
    - KEY_PATH=/certs/localStatusReporter-key.pem
    - CERT_PATH=/certs/localStatusReporter.pem

  postgres:
    build:
      context: ../../../
      dockerfile: services/postgres/Dockerfile
    volumes:
    - C:\iryo\wwm\services\postgres:/docker-entrypoint-initdb.d
    - C:\iryo\wwm\bin\tls:/certs:ro
    ports:
    - 5432:5432
    environment:
    - POSTGRES_USER=root
    - POSTGRES_PASSWORD=root

  localDiscovery:
    image: iryo/localdiscovery:${IRYO_TAG}
    command:
    - ./localDiscovery
    volumes:
    - C:\iryo\wwm\localDiscovery:/var/data
    - C:\iryo\wwm\bin\tls:/certs:ro
    - C:\iryo\wwm\bin\tls\ca.pem:/etc/ssl/certs/ca-iryo.pem:ro
    environment:
    - DOMAIN_TYPE=clinic
    - DOMAIN_ID=${CLINIC_ID}
    - KEY_PATH=/certs/localDiscovery-key.pem
    - CERT_PATH=/certs/localDiscovery.pem
    - DB_USERNAME=localdiscovery
    - DB_PASSWORD=localdiscovery
    depends_on:
    - postgres

  localSymmetric:
    image: iryo/symmetric
    command:
    - bash
    - /opt/symmetric/local/local.sh
    volumes:
    - C:\iryo\wwm\services\symmetric\engines:/opt/symmetric/enginesTemplates:ro
    - C:\iryo\wwm\services\symmetric\samples:/opt/symmetric/samples:ro
    - C:\iryo\wwm\services\symmetric\bin:/opt/symmetric/local:ro
    environment:
    - LOCATION_ID=${LOCATION_ID}
    - DB_URL=jdbc:postgresql://postgres/localdiscovery
    - DB_USER=localsymmetric
    - DB_PASSWORD=symmetric
    - REGISTRATION_URL=${SYMMETRIC_REGISTRATION_URL}
    depends_on:
    - postgres

  avahi:
    image: iryo/avahi
    network_mode: host
    environment:
    - AVAHI_HOST=iryo
    - AVAHI_DOMAIN=local
